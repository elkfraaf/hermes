(declare-const p.recv_map__data__Map__wp1__lat  Int)
(declare-const p.recv_map__data__Map__wp1__long  Int)
(declare-const p.recv_map__data__Map__wp1__alt  Int)
(declare-const p.recv_map__data__Map__wp2__lat  Int)
(declare-const p.recv_map__data__Map__wp2__long  Int)
(declare-const p.recv_map__data__Map__wp2__alt  Int)
(declare-const p.recv_map__data__Map__wp3__lat  Int)
(declare-const p.recv_map__data__Map__wp3__long  Int)
(declare-const p.recv_map__data__Map__wp3__alt  Int)
(declare-const p.recv_map__data__Map__wp4__lat  Int)
(declare-const p.recv_map__data__Map__wp4__long  Int)
(declare-const p.recv_map__data__Map__wp4__alt  Int)
(declare-const p.recv_map__data__Pattern  Int)
(declare-const p.recv_map__data__HMAC  Bool)
(declare-const p.send_status__data__lat  Int)
(declare-const p.send_status__data__long  Int)
(declare-const p.send_status__data__alt  Int)
(declare-const p.waypoint__data__wp1__lat  Int)
(declare-const p.waypoint__data__wp1__long  Int)
(declare-const p.waypoint__data__wp1__alt  Int)
(declare-const p.waypoint__data__wp2__lat  Int)
(declare-const p.waypoint__data__wp2__long  Int)
(declare-const p.waypoint__data__wp2__alt  Int)
(declare-const p.waypoint__data__wp3__lat  Int)
(declare-const p.waypoint__data__wp3__long  Int)
(declare-const p.waypoint__data__wp3__alt  Int)
(declare-const p.waypoint__data__wp4__lat  Int)
(declare-const p.waypoint__data__wp4__long  Int)
(declare-const p.waypoint__data__wp4__alt  Int)
(declare-const p.waypoint__data__crc  Bool)
(declare-const p.position_status__data__lat  Int)
(declare-const p.position_status__data__long  Int)
(declare-const p.position_status__data__alt  Int)
(define-fun p.Req001_MC_SW () Bool p.recv_map__data__HMAC)
(define-fun p.Req002_MC_SW () Bool p.recv_map__data__HMAC)
(define-fun p.Req003_MC_SW () Bool p.waypoint__data__crc)
(define-fun p.assumption () Bool (and p.Req001_MC_SW p.Req002_MC_SW))
(define-fun p.guarantee () Bool p.Req003_MC_SW)
(declare-const p.RADIO__recv_map_in__event  Bool)
(declare-const p.RADIO__recv_map_in__data__Map__wp1__lat  Int)
(declare-const p.RADIO__recv_map_in__data__Map__wp1__long  Int)
(declare-const p.RADIO__recv_map_in__data__Map__wp1__alt  Int)
(declare-const p.RADIO__recv_map_in__data__Map__wp2__lat  Int)
(declare-const p.RADIO__recv_map_in__data__Map__wp2__long  Int)
(declare-const p.RADIO__recv_map_in__data__Map__wp2__alt  Int)
(declare-const p.RADIO__recv_map_in__data__Map__wp3__lat  Int)
(declare-const p.RADIO__recv_map_in__data__Map__wp3__long  Int)
(declare-const p.RADIO__recv_map_in__data__Map__wp3__alt  Int)
(declare-const p.RADIO__recv_map_in__data__Map__wp4__lat  Int)
(declare-const p.RADIO__recv_map_in__data__Map__wp4__long  Int)
(declare-const p.RADIO__recv_map_in__data__Map__wp4__alt  Int)
(declare-const p.RADIO__recv_map_in__data__Pattern  Int)
(declare-const p.RADIO__recv_map_in__data__HMAC  Bool)
(declare-const p.RADIO__send_status_out__event  Bool)
(declare-const p.RADIO__send_status_out__data__lat  Int)
(declare-const p.RADIO__send_status_out__data__long  Int)
(declare-const p.RADIO__send_status_out__data__alt  Int)
(declare-const p.RADIO__send_status_in__event  Bool)
(declare-const p.RADIO__send_status_in__data__lat  Int)
(declare-const p.RADIO__send_status_in__data__long  Int)
(declare-const p.RADIO__send_status_in__data__alt  Int)
(declare-const p.RADIO__recv_map_out__event  Bool)
(declare-const p.RADIO__recv_map_out__data__Map__wp1__lat  Int)
(declare-const p.RADIO__recv_map_out__data__Map__wp1__long  Int)
(declare-const p.RADIO__recv_map_out__data__Map__wp1__alt  Int)
(declare-const p.RADIO__recv_map_out__data__Map__wp2__lat  Int)
(declare-const p.RADIO__recv_map_out__data__Map__wp2__long  Int)
(declare-const p.RADIO__recv_map_out__data__Map__wp2__alt  Int)
(declare-const p.RADIO__recv_map_out__data__Map__wp3__lat  Int)
(declare-const p.RADIO__recv_map_out__data__Map__wp3__long  Int)
(declare-const p.RADIO__recv_map_out__data__Map__wp3__alt  Int)
(declare-const p.RADIO__recv_map_out__data__Map__wp4__lat  Int)
(declare-const p.RADIO__recv_map_out__data__Map__wp4__long  Int)
(declare-const p.RADIO__recv_map_out__data__Map__wp4__alt  Int)
(declare-const p.RADIO__recv_map_out__data__Pattern  Int)
(declare-const p.RADIO__recv_map_out__data__HMAC  Bool)
(define-fun p.RADIO__Req001_RadioDriver () Bool p.RADIO__recv_map_in__data__HMAC)
(define-fun p.RADIO__Req002_RadioDriver () Bool p.RADIO__recv_map_out__data__HMAC)
(define-fun p.RADIO__assumption () Bool p.RADIO__Req001_RadioDriver)
(define-fun p.RADIO__guarantee () Bool p.RADIO__Req002_RadioDriver)
(declare-const p.FPLN__flight_plan__data__wp1__lat  Int)
(declare-const p.FPLN__flight_plan__data__wp1__long  Int)
(declare-const p.FPLN__flight_plan__data__wp1__alt  Int)
(declare-const p.FPLN__flight_plan__data__wp2__lat  Int)
(declare-const p.FPLN__flight_plan__data__wp2__long  Int)
(declare-const p.FPLN__flight_plan__data__wp2__alt  Int)
(declare-const p.FPLN__flight_plan__data__wp3__lat  Int)
(declare-const p.FPLN__flight_plan__data__wp3__long  Int)
(declare-const p.FPLN__flight_plan__data__wp3__alt  Int)
(declare-const p.FPLN__flight_plan__data__wp4__lat  Int)
(declare-const p.FPLN__flight_plan__data__wp4__long  Int)
(declare-const p.FPLN__flight_plan__data__wp4__alt  Int)
(declare-const p.FPLN__flight_plan__data__wp5__lat  Int)
(declare-const p.FPLN__flight_plan__data__wp5__long  Int)
(declare-const p.FPLN__flight_plan__data__wp5__alt  Int)
(declare-const p.FPLN__flight_plan__data__wp6__lat  Int)
(declare-const p.FPLN__flight_plan__data__wp6__long  Int)
(declare-const p.FPLN__flight_plan__data__wp6__alt  Int)
(declare-const p.FPLN__flight_plan__data__wp7__lat  Int)
(declare-const p.FPLN__flight_plan__data__wp7__long  Int)
(declare-const p.FPLN__flight_plan__data__wp7__alt  Int)
(declare-const p.FPLN__flight_plan__data__wp8__lat  Int)
(declare-const p.FPLN__flight_plan__data__wp8__long  Int)
(declare-const p.FPLN__flight_plan__data__wp8__alt  Int)
(declare-const p.FPLN__flight_plan__data__wp9__lat  Int)
(declare-const p.FPLN__flight_plan__data__wp9__long  Int)
(declare-const p.FPLN__flight_plan__data__wp9__alt  Int)
(declare-const p.FPLN__flight_plan__data__wp10__lat  Int)
(declare-const p.FPLN__flight_plan__data__wp10__long  Int)
(declare-const p.FPLN__flight_plan__data__wp10__alt  Int)
(declare-const p.FPLN__recv_map__data__Map__wp1__lat  Int)
(declare-const p.FPLN__recv_map__data__Map__wp1__long  Int)
(declare-const p.FPLN__recv_map__data__Map__wp1__alt  Int)
(declare-const p.FPLN__recv_map__data__Map__wp2__lat  Int)
(declare-const p.FPLN__recv_map__data__Map__wp2__long  Int)
(declare-const p.FPLN__recv_map__data__Map__wp2__alt  Int)
(declare-const p.FPLN__recv_map__data__Map__wp3__lat  Int)
(declare-const p.FPLN__recv_map__data__Map__wp3__long  Int)
(declare-const p.FPLN__recv_map__data__Map__wp3__alt  Int)
(declare-const p.FPLN__recv_map__data__Map__wp4__lat  Int)
(declare-const p.FPLN__recv_map__data__Map__wp4__long  Int)
(declare-const p.FPLN__recv_map__data__Map__wp4__alt  Int)
(declare-const p.FPLN__recv_map__data__Pattern  Int)
(declare-const p.FPLN__recv_map__data__HMAC  Bool)
(declare-const p.FPLN__position_status__data__lat  Int)
(declare-const p.FPLN__position_status__data__long  Int)
(declare-const p.FPLN__position_status__data__alt  Int)
(define-fun p.FPLN__Req001_FlightPlanner () Bool p.FPLN__recv_map__data__HMAC)
(define-fun p.FPLN__Req002_FlightPlanner () Bool (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (>= p.FPLN__recv_map__data__Map__wp1__lat (- 90)) (<= p.FPLN__recv_map__data__Map__wp1__lat 90)) (>= p.FPLN__recv_map__data__Map__wp1__long (- 180))) (<= p.FPLN__recv_map__data__Map__wp1__long 180)) (>= p.FPLN__recv_map__data__Map__wp1__alt 0)) (<= p.FPLN__recv_map__data__Map__wp1__alt 15000)) (>= p.FPLN__recv_map__data__Map__wp2__lat (- 90))) (<= p.FPLN__recv_map__data__Map__wp2__lat 90)) (>= p.FPLN__recv_map__data__Map__wp2__long (- 180))) (<= p.FPLN__recv_map__data__Map__wp2__long 180)) (>= p.FPLN__recv_map__data__Map__wp2__alt 0)) (<= p.FPLN__recv_map__data__Map__wp2__alt 15000)) (>= p.FPLN__recv_map__data__Map__wp3__lat (- 90))) (<= p.FPLN__recv_map__data__Map__wp3__lat 90)) (>= p.FPLN__recv_map__data__Map__wp3__long (- 180))) (<= p.FPLN__recv_map__data__Map__wp3__long 180)) (>= p.FPLN__recv_map__data__Map__wp3__alt 0)) (<= p.FPLN__recv_map__data__Map__wp3__alt 15000)) (>= p.FPLN__recv_map__data__Map__wp4__lat (- 90))) (<= p.FPLN__recv_map__data__Map__wp4__lat 90)) (>= p.FPLN__recv_map__data__Map__wp4__long (- 180))) (<= p.FPLN__recv_map__data__Map__wp4__long 180)) (>= p.FPLN__recv_map__data__Map__wp4__alt 0)) (<= p.FPLN__recv_map__data__Map__wp4__alt 15000)))
(define-fun p.FPLN__assumption () Bool (and p.FPLN__Req001_FlightPlanner p.FPLN__Req002_FlightPlanner))
(define-fun p.FPLN__Req003_FlightPlanner () Bool (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (>= p.FPLN__flight_plan__data__wp1__lat (- 90)) (<= p.FPLN__flight_plan__data__wp1__lat 90)) (>= p.FPLN__flight_plan__data__wp1__long (- 180))) (<= p.FPLN__flight_plan__data__wp1__long 180)) (>= p.FPLN__flight_plan__data__wp1__alt 0)) (<= p.FPLN__flight_plan__data__wp1__alt 15000)) (>= p.FPLN__flight_plan__data__wp2__lat (- 90))) (<= p.FPLN__flight_plan__data__wp2__lat 90)) (>= p.FPLN__flight_plan__data__wp2__long (- 180))) (<= p.FPLN__flight_plan__data__wp2__long 180)) (>= p.FPLN__flight_plan__data__wp2__alt 0)) (<= p.FPLN__flight_plan__data__wp2__alt 15000)) (>= p.FPLN__flight_plan__data__wp3__lat (- 90))) (<= p.FPLN__flight_plan__data__wp3__lat 90)) (>= p.FPLN__flight_plan__data__wp3__long (- 180))) (<= p.FPLN__flight_plan__data__wp3__long 180)) (>= p.FPLN__flight_plan__data__wp3__alt 0)) (<= p.FPLN__flight_plan__data__wp3__alt 15000)) (>= p.FPLN__flight_plan__data__wp4__lat (- 90))) (<= p.FPLN__flight_plan__data__wp4__lat 90)) (>= p.FPLN__flight_plan__data__wp4__long (- 180))) (<= p.FPLN__flight_plan__data__wp4__long 180)) (>= p.FPLN__flight_plan__data__wp4__alt 0)) (<= p.FPLN__flight_plan__data__wp4__alt 15000)) (>= p.FPLN__flight_plan__data__wp5__lat (- 90))) (<= p.FPLN__flight_plan__data__wp5__lat 90)) (>= p.FPLN__flight_plan__data__wp5__long (- 180))) (<= p.FPLN__flight_plan__data__wp5__long 180)) (>= p.FPLN__flight_plan__data__wp5__alt 0)) (<= p.FPLN__flight_plan__data__wp5__alt 15000)) (>= p.FPLN__flight_plan__data__wp6__lat (- 90))) (<= p.FPLN__flight_plan__data__wp6__lat 90)) (>= p.FPLN__flight_plan__data__wp6__long (- 180))) (<= p.FPLN__flight_plan__data__wp6__long 180)) (>= p.FPLN__flight_plan__data__wp6__alt 0)) (<= p.FPLN__flight_plan__data__wp6__alt 15000)) (>= p.FPLN__flight_plan__data__wp7__lat (- 90))) (<= p.FPLN__flight_plan__data__wp7__lat 90)) (>= p.FPLN__flight_plan__data__wp7__long (- 180))) (<= p.FPLN__flight_plan__data__wp7__long 180)) (>= p.FPLN__flight_plan__data__wp7__alt 0)) (<= p.FPLN__flight_plan__data__wp7__alt 15000)) (>= p.FPLN__flight_plan__data__wp8__lat (- 90))) (<= p.FPLN__flight_plan__data__wp8__lat 90)) (>= p.FPLN__flight_plan__data__wp8__long (- 180))) (<= p.FPLN__flight_plan__data__wp8__long 180)) (>= p.FPLN__flight_plan__data__wp8__alt 0)) (<= p.FPLN__flight_plan__data__wp8__alt 15000)) (>= p.FPLN__flight_plan__data__wp9__lat (- 90))) (<= p.FPLN__flight_plan__data__wp9__lat 90)) (>= p.FPLN__flight_plan__data__wp9__long (- 180))) (<= p.FPLN__flight_plan__data__wp9__long 180)) (>= p.FPLN__flight_plan__data__wp9__alt 0)) (<= p.FPLN__flight_plan__data__wp9__alt 15000)) (>= p.FPLN__flight_plan__data__wp10__lat (- 90))) (<= p.FPLN__flight_plan__data__wp10__lat 90)) (>= p.FPLN__flight_plan__data__wp10__long (- 180))) (<= p.FPLN__flight_plan__data__wp10__long 180)) (>= p.FPLN__flight_plan__data__wp10__alt 0)) (<= p.FPLN__flight_plan__data__wp10__alt 15000)))
(define-fun p.FPLN__guarantee () Bool p.FPLN__Req003_FlightPlanner)
(declare-const p.WPM__flight_plan__data__wp1__lat  Int)
(declare-const p.WPM__flight_plan__data__wp1__long  Int)
(declare-const p.WPM__flight_plan__data__wp1__alt  Int)
(declare-const p.WPM__flight_plan__data__wp2__lat  Int)
(declare-const p.WPM__flight_plan__data__wp2__long  Int)
(declare-const p.WPM__flight_plan__data__wp2__alt  Int)
(declare-const p.WPM__flight_plan__data__wp3__lat  Int)
(declare-const p.WPM__flight_plan__data__wp3__long  Int)
(declare-const p.WPM__flight_plan__data__wp3__alt  Int)
(declare-const p.WPM__flight_plan__data__wp4__lat  Int)
(declare-const p.WPM__flight_plan__data__wp4__long  Int)
(declare-const p.WPM__flight_plan__data__wp4__alt  Int)
(declare-const p.WPM__flight_plan__data__wp5__lat  Int)
(declare-const p.WPM__flight_plan__data__wp5__long  Int)
(declare-const p.WPM__flight_plan__data__wp5__alt  Int)
(declare-const p.WPM__flight_plan__data__wp6__lat  Int)
(declare-const p.WPM__flight_plan__data__wp6__long  Int)
(declare-const p.WPM__flight_plan__data__wp6__alt  Int)
(declare-const p.WPM__flight_plan__data__wp7__lat  Int)
(declare-const p.WPM__flight_plan__data__wp7__long  Int)
(declare-const p.WPM__flight_plan__data__wp7__alt  Int)
(declare-const p.WPM__flight_plan__data__wp8__lat  Int)
(declare-const p.WPM__flight_plan__data__wp8__long  Int)
(declare-const p.WPM__flight_plan__data__wp8__alt  Int)
(declare-const p.WPM__flight_plan__data__wp9__lat  Int)
(declare-const p.WPM__flight_plan__data__wp9__long  Int)
(declare-const p.WPM__flight_plan__data__wp9__alt  Int)
(declare-const p.WPM__flight_plan__data__wp10__lat  Int)
(declare-const p.WPM__flight_plan__data__wp10__long  Int)
(declare-const p.WPM__flight_plan__data__wp10__alt  Int)
(declare-const p.WPM__waypoint__data__wp1__lat  Int)
(declare-const p.WPM__waypoint__data__wp1__long  Int)
(declare-const p.WPM__waypoint__data__wp1__alt  Int)
(declare-const p.WPM__waypoint__data__wp2__lat  Int)
(declare-const p.WPM__waypoint__data__wp2__long  Int)
(declare-const p.WPM__waypoint__data__wp2__alt  Int)
(declare-const p.WPM__waypoint__data__wp3__lat  Int)
(declare-const p.WPM__waypoint__data__wp3__long  Int)
(declare-const p.WPM__waypoint__data__wp3__alt  Int)
(declare-const p.WPM__waypoint__data__wp4__lat  Int)
(declare-const p.WPM__waypoint__data__wp4__long  Int)
(declare-const p.WPM__waypoint__data__wp4__alt  Int)
(declare-const p.WPM__waypoint__data__crc  Bool)
(declare-const p.WPM__position_status__data__lat  Int)
(declare-const p.WPM__position_status__data__long  Int)
(declare-const p.WPM__position_status__data__alt  Int)
(define-fun p.WPM__Req001_WaypointManager () Bool (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (>= p.WPM__flight_plan__data__wp1__lat (- 90)) (<= p.WPM__flight_plan__data__wp1__lat 90)) (>= p.WPM__flight_plan__data__wp1__long (- 180))) (<= p.WPM__flight_plan__data__wp1__long 180)) (>= p.WPM__flight_plan__data__wp1__alt 0)) (<= p.WPM__flight_plan__data__wp1__alt 15000)) (>= p.WPM__flight_plan__data__wp2__lat (- 90))) (<= p.WPM__flight_plan__data__wp2__lat 90)) (>= p.WPM__flight_plan__data__wp2__long (- 180))) (<= p.WPM__flight_plan__data__wp2__long 180)) (>= p.WPM__flight_plan__data__wp2__alt 0)) (<= p.WPM__flight_plan__data__wp2__alt 15000)) (>= p.WPM__flight_plan__data__wp3__lat (- 90))) (<= p.WPM__flight_plan__data__wp3__lat 90)) (>= p.WPM__flight_plan__data__wp3__long (- 180))) (<= p.WPM__flight_plan__data__wp3__long 180)) (>= p.WPM__flight_plan__data__wp3__alt 0)) (<= p.WPM__flight_plan__data__wp3__alt 15000)) (>= p.WPM__flight_plan__data__wp4__lat (- 90))) (<= p.WPM__flight_plan__data__wp4__lat 90)) (>= p.WPM__flight_plan__data__wp4__long (- 180))) (<= p.WPM__flight_plan__data__wp4__long 180)) (>= p.WPM__flight_plan__data__wp4__alt 0)) (<= p.WPM__flight_plan__data__wp4__alt 15000)) (>= p.WPM__flight_plan__data__wp5__lat (- 90))) (<= p.WPM__flight_plan__data__wp5__lat 90)) (>= p.WPM__flight_plan__data__wp5__long (- 180))) (<= p.WPM__flight_plan__data__wp5__long 180)) (>= p.WPM__flight_plan__data__wp5__alt 0)) (<= p.WPM__flight_plan__data__wp5__alt 15000)) (>= p.WPM__flight_plan__data__wp6__lat (- 90))) (<= p.WPM__flight_plan__data__wp6__lat 90)) (>= p.WPM__flight_plan__data__wp6__long (- 180))) (<= p.WPM__flight_plan__data__wp6__long 180)) (>= p.WPM__flight_plan__data__wp6__alt 0)) (<= p.WPM__flight_plan__data__wp6__alt 15000)) (>= p.WPM__flight_plan__data__wp7__lat (- 90))) (<= p.WPM__flight_plan__data__wp7__lat 90)) (>= p.WPM__flight_plan__data__wp7__long (- 180))) (<= p.WPM__flight_plan__data__wp7__long 180)) (>= p.WPM__flight_plan__data__wp7__alt 0)) (<= p.WPM__flight_plan__data__wp7__alt 15000)) (>= p.WPM__flight_plan__data__wp8__lat (- 90))) (<= p.WPM__flight_plan__data__wp8__lat 90)) (>= p.WPM__flight_plan__data__wp8__long (- 180))) (<= p.WPM__flight_plan__data__wp8__long 180)) (>= p.WPM__flight_plan__data__wp8__alt 0)) (<= p.WPM__flight_plan__data__wp8__alt 15000)) (>= p.WPM__flight_plan__data__wp9__lat (- 90))) (<= p.WPM__flight_plan__data__wp9__lat 90)) (>= p.WPM__flight_plan__data__wp9__long (- 180))) (<= p.WPM__flight_plan__data__wp9__long 180)) (>= p.WPM__flight_plan__data__wp9__alt 0)) (<= p.WPM__flight_plan__data__wp9__alt 15000)) (>= p.WPM__flight_plan__data__wp10__lat (- 90))) (<= p.WPM__flight_plan__data__wp10__lat 90)) (>= p.WPM__flight_plan__data__wp10__long (- 180))) (<= p.WPM__flight_plan__data__wp10__long 180)) (>= p.WPM__flight_plan__data__wp10__alt 0)) (<= p.WPM__flight_plan__data__wp10__alt 15000)))
(define-fun p.WPM__Req002_WaypointManager () Bool (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (>= p.WPM__waypoint__data__wp1__lat (- 90)) (<= p.WPM__waypoint__data__wp1__lat 90)) (>= p.WPM__waypoint__data__wp1__long (- 180))) (<= p.WPM__waypoint__data__wp1__long 180)) (>= p.WPM__waypoint__data__wp1__alt 0)) (<= p.WPM__waypoint__data__wp1__alt 15000)) (>= p.WPM__waypoint__data__wp2__lat (- 90))) (<= p.WPM__waypoint__data__wp2__lat 90)) (>= p.WPM__waypoint__data__wp2__long (- 180))) (<= p.WPM__waypoint__data__wp2__long 180)) (>= p.WPM__waypoint__data__wp2__alt 0)) (<= p.WPM__waypoint__data__wp2__alt 15000)) (>= p.WPM__waypoint__data__wp3__lat (- 90))) (<= p.WPM__waypoint__data__wp3__lat 90)) (>= p.WPM__waypoint__data__wp3__long (- 180))) (<= p.WPM__waypoint__data__wp3__long 180)) (>= p.WPM__waypoint__data__wp3__alt 0)) (<= p.WPM__waypoint__data__wp3__alt 15000)) (>= p.WPM__waypoint__data__wp4__lat (- 90))) (<= p.WPM__waypoint__data__wp4__lat 90)) (>= p.WPM__waypoint__data__wp4__long (- 180))) (<= p.WPM__waypoint__data__wp4__long 180)) (>= p.WPM__waypoint__data__wp4__alt 0)) (<= p.WPM__waypoint__data__wp4__alt 15000)))
(define-fun p.WPM__assumption () Bool p.WPM__Req001_WaypointManager)
(define-fun p.WPM__guarantee () Bool p.WPM__Req002_WaypointManager)
(declare-const p.UART__position_status_in__data__lat  Int)
(declare-const p.UART__position_status_in__data__long  Int)
(declare-const p.UART__position_status_in__data__alt  Int)
(declare-const p.UART__waypoint_out__data__wp1__lat  Int)
(declare-const p.UART__waypoint_out__data__wp1__long  Int)
(declare-const p.UART__waypoint_out__data__wp1__alt  Int)
(declare-const p.UART__waypoint_out__data__wp2__lat  Int)
(declare-const p.UART__waypoint_out__data__wp2__long  Int)
(declare-const p.UART__waypoint_out__data__wp2__alt  Int)
(declare-const p.UART__waypoint_out__data__wp3__lat  Int)
(declare-const p.UART__waypoint_out__data__wp3__long  Int)
(declare-const p.UART__waypoint_out__data__wp3__alt  Int)
(declare-const p.UART__waypoint_out__data__wp4__lat  Int)
(declare-const p.UART__waypoint_out__data__wp4__long  Int)
(declare-const p.UART__waypoint_out__data__wp4__alt  Int)
(declare-const p.UART__waypoint_out__data__crc  Bool)
(declare-const p.UART__position_status_out__data__lat  Int)
(declare-const p.UART__position_status_out__data__long  Int)
(declare-const p.UART__position_status_out__data__alt  Int)
(declare-const p.UART__waypoint_in__data__wp1__lat  Int)
(declare-const p.UART__waypoint_in__data__wp1__long  Int)
(declare-const p.UART__waypoint_in__data__wp1__alt  Int)
(declare-const p.UART__waypoint_in__data__wp2__lat  Int)
(declare-const p.UART__waypoint_in__data__wp2__long  Int)
(declare-const p.UART__waypoint_in__data__wp2__alt  Int)
(declare-const p.UART__waypoint_in__data__wp3__lat  Int)
(declare-const p.UART__waypoint_in__data__wp3__long  Int)
(declare-const p.UART__waypoint_in__data__wp3__alt  Int)
(declare-const p.UART__waypoint_in__data__wp4__lat  Int)
(declare-const p.UART__waypoint_in__data__wp4__long  Int)
(declare-const p.UART__waypoint_in__data__wp4__alt  Int)
(declare-const p.UART__waypoint_in__data__crc  Bool)
(define-fun p.UART__Req001_UARTDriver () Bool (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (>= p.UART__waypoint_in__data__wp1__lat (- 90)) (<= p.UART__waypoint_in__data__wp1__lat 90)) (>= p.UART__waypoint_in__data__wp1__long (- 180))) (<= p.UART__waypoint_in__data__wp1__long 180)) (>= p.UART__waypoint_in__data__wp1__alt 0)) (<= p.UART__waypoint_in__data__wp1__alt 15000)) (>= p.UART__waypoint_in__data__wp2__lat (- 90))) (<= p.UART__waypoint_in__data__wp2__lat 90)) (>= p.UART__waypoint_in__data__wp2__long (- 180))) (<= p.UART__waypoint_in__data__wp2__long 180)) (>= p.UART__waypoint_in__data__wp2__alt 0)) (<= p.UART__waypoint_in__data__wp2__alt 15000)) (>= p.UART__waypoint_in__data__wp3__lat (- 90))) (<= p.UART__waypoint_in__data__wp3__lat 90)) (>= p.UART__waypoint_in__data__wp3__long (- 180))) (<= p.UART__waypoint_in__data__wp3__long 180)) (>= p.UART__waypoint_in__data__wp3__alt 0)) (<= p.UART__waypoint_in__data__wp3__alt 15000)) (>= p.UART__waypoint_in__data__wp4__lat (- 90))) (<= p.UART__waypoint_in__data__wp4__lat 90)) (>= p.UART__waypoint_in__data__wp4__long (- 180))) (<= p.UART__waypoint_in__data__wp4__long 180)) (>= p.UART__waypoint_in__data__wp4__alt 0)) (<= p.UART__waypoint_in__data__wp4__alt 15000)))
(define-fun p.UART__Req002_UARTDriver () Bool p.UART__waypoint_out__data__crc)
(define-fun p.UART__assumption () Bool p.UART__Req001_UARTDriver)
(define-fun p.UART__guarantee () Bool p.UART__Req002_UARTDriver)
(assert (and (>= p.FPLN__recv_map__data__Pattern 0) (<= p.FPLN__recv_map__data__Pattern 2)))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (= p.recv_map__data__Map__wp1__lat p.RADIO__recv_map_in__data__Map__wp1__lat) (= p.recv_map__data__Map__wp1__long p.RADIO__recv_map_in__data__Map__wp1__long)) (= p.recv_map__data__Map__wp1__alt p.RADIO__recv_map_in__data__Map__wp1__alt)) (= p.recv_map__data__Map__wp2__lat p.RADIO__recv_map_in__data__Map__wp2__lat)) (= p.recv_map__data__Map__wp2__long p.RADIO__recv_map_in__data__Map__wp2__long)) (= p.recv_map__data__Map__wp2__alt p.RADIO__recv_map_in__data__Map__wp2__alt)) (= p.recv_map__data__Map__wp3__lat p.RADIO__recv_map_in__data__Map__wp3__lat)) (= p.recv_map__data__Map__wp3__long p.RADIO__recv_map_in__data__Map__wp3__long)) (= p.recv_map__data__Map__wp3__alt p.RADIO__recv_map_in__data__Map__wp3__alt)) (= p.recv_map__data__Map__wp4__lat p.RADIO__recv_map_in__data__Map__wp4__lat)) (= p.recv_map__data__Map__wp4__long p.RADIO__recv_map_in__data__Map__wp4__long)) (= p.recv_map__data__Map__wp4__alt p.RADIO__recv_map_in__data__Map__wp4__alt)) (= p.recv_map__data__Pattern p.RADIO__recv_map_in__data__Pattern)) (= p.recv_map__data__HMAC p.RADIO__recv_map_in__data__HMAC)))
(assert (and (and (= p.send_status__data__lat p.RADIO__send_status_out__data__lat) (= p.send_status__data__long p.RADIO__send_status_out__data__long)) (= p.send_status__data__alt p.RADIO__send_status_out__data__alt)))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (= p.FPLN__recv_map__data__Map__wp1__lat p.RADIO__recv_map_out__data__Map__wp1__lat) (= p.FPLN__recv_map__data__Map__wp1__long p.RADIO__recv_map_out__data__Map__wp1__long)) (= p.FPLN__recv_map__data__Map__wp1__alt p.RADIO__recv_map_out__data__Map__wp1__alt)) (= p.FPLN__recv_map__data__Map__wp2__lat p.RADIO__recv_map_out__data__Map__wp2__lat)) (= p.FPLN__recv_map__data__Map__wp2__long p.RADIO__recv_map_out__data__Map__wp2__long)) (= p.FPLN__recv_map__data__Map__wp2__alt p.RADIO__recv_map_out__data__Map__wp2__alt)) (= p.FPLN__recv_map__data__Map__wp3__lat p.RADIO__recv_map_out__data__Map__wp3__lat)) (= p.FPLN__recv_map__data__Map__wp3__long p.RADIO__recv_map_out__data__Map__wp3__long)) (= p.FPLN__recv_map__data__Map__wp3__alt p.RADIO__recv_map_out__data__Map__wp3__alt)) (= p.FPLN__recv_map__data__Map__wp4__lat p.RADIO__recv_map_out__data__Map__wp4__lat)) (= p.FPLN__recv_map__data__Map__wp4__long p.RADIO__recv_map_out__data__Map__wp4__long)) (= p.FPLN__recv_map__data__Map__wp4__alt p.RADIO__recv_map_out__data__Map__wp4__alt)) (= p.FPLN__recv_map__data__Pattern p.RADIO__recv_map_out__data__Pattern)) (= p.FPLN__recv_map__data__HMAC p.RADIO__recv_map_out__data__HMAC)))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= p.FPLN__flight_plan__data__wp1__lat p.WPM__flight_plan__data__wp1__lat) (= p.FPLN__flight_plan__data__wp1__long p.WPM__flight_plan__data__wp1__long)) (= p.FPLN__flight_plan__data__wp1__alt p.WPM__flight_plan__data__wp1__alt)) (= p.FPLN__flight_plan__data__wp2__lat p.WPM__flight_plan__data__wp2__lat)) (= p.FPLN__flight_plan__data__wp2__long p.WPM__flight_plan__data__wp2__long)) (= p.FPLN__flight_plan__data__wp2__alt p.WPM__flight_plan__data__wp2__alt)) (= p.FPLN__flight_plan__data__wp3__lat p.WPM__flight_plan__data__wp3__lat)) (= p.FPLN__flight_plan__data__wp3__long p.WPM__flight_plan__data__wp3__long)) (= p.FPLN__flight_plan__data__wp3__alt p.WPM__flight_plan__data__wp3__alt)) (= p.FPLN__flight_plan__data__wp4__lat p.WPM__flight_plan__data__wp4__lat)) (= p.FPLN__flight_plan__data__wp4__long p.WPM__flight_plan__data__wp4__long)) (= p.FPLN__flight_plan__data__wp4__alt p.WPM__flight_plan__data__wp4__alt)) (= p.FPLN__flight_plan__data__wp5__lat p.WPM__flight_plan__data__wp5__lat)) (= p.FPLN__flight_plan__data__wp5__long p.WPM__flight_plan__data__wp5__long)) (= p.FPLN__flight_plan__data__wp5__alt p.WPM__flight_plan__data__wp5__alt)) (= p.FPLN__flight_plan__data__wp6__lat p.WPM__flight_plan__data__wp6__lat)) (= p.FPLN__flight_plan__data__wp6__long p.WPM__flight_plan__data__wp6__long)) (= p.FPLN__flight_plan__data__wp6__alt p.WPM__flight_plan__data__wp6__alt)) (= p.FPLN__flight_plan__data__wp7__lat p.WPM__flight_plan__data__wp7__lat)) (= p.FPLN__flight_plan__data__wp7__long p.WPM__flight_plan__data__wp7__long)) (= p.FPLN__flight_plan__data__wp7__alt p.WPM__flight_plan__data__wp7__alt)) (= p.FPLN__flight_plan__data__wp8__lat p.WPM__flight_plan__data__wp8__lat)) (= p.FPLN__flight_plan__data__wp8__long p.WPM__flight_plan__data__wp8__long)) (= p.FPLN__flight_plan__data__wp8__alt p.WPM__flight_plan__data__wp8__alt)) (= p.FPLN__flight_plan__data__wp9__lat p.WPM__flight_plan__data__wp9__lat)) (= p.FPLN__flight_plan__data__wp9__long p.WPM__flight_plan__data__wp9__long)) (= p.FPLN__flight_plan__data__wp9__alt p.WPM__flight_plan__data__wp9__alt)) (= p.FPLN__flight_plan__data__wp10__lat p.WPM__flight_plan__data__wp10__lat)) (= p.FPLN__flight_plan__data__wp10__long p.WPM__flight_plan__data__wp10__long)) (= p.FPLN__flight_plan__data__wp10__alt p.WPM__flight_plan__data__wp10__alt)))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (= p.WPM__waypoint__data__wp1__lat p.UART__waypoint_in__data__wp1__lat) (= p.WPM__waypoint__data__wp1__long p.UART__waypoint_in__data__wp1__long)) (= p.WPM__waypoint__data__wp1__alt p.UART__waypoint_in__data__wp1__alt)) (= p.WPM__waypoint__data__wp2__lat p.UART__waypoint_in__data__wp2__lat)) (= p.WPM__waypoint__data__wp2__long p.UART__waypoint_in__data__wp2__long)) (= p.WPM__waypoint__data__wp2__alt p.UART__waypoint_in__data__wp2__alt)) (= p.WPM__waypoint__data__wp3__lat p.UART__waypoint_in__data__wp3__lat)) (= p.WPM__waypoint__data__wp3__long p.UART__waypoint_in__data__wp3__long)) (= p.WPM__waypoint__data__wp3__alt p.UART__waypoint_in__data__wp3__alt)) (= p.WPM__waypoint__data__wp4__lat p.UART__waypoint_in__data__wp4__lat)) (= p.WPM__waypoint__data__wp4__long p.UART__waypoint_in__data__wp4__long)) (= p.WPM__waypoint__data__wp4__alt p.UART__waypoint_in__data__wp4__alt)) (= p.WPM__waypoint__data__crc p.UART__waypoint_in__data__crc)))
(assert (and (and (= p.UART__position_status_out__data__lat p.WPM__position_status__data__lat) (= p.UART__position_status_out__data__long p.WPM__position_status__data__long)) (= p.UART__position_status_out__data__alt p.WPM__position_status__data__alt)))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (= p.waypoint__data__wp1__lat p.UART__waypoint_out__data__wp1__lat) (= p.waypoint__data__wp1__long p.UART__waypoint_out__data__wp1__long)) (= p.waypoint__data__wp1__alt p.UART__waypoint_out__data__wp1__alt)) (= p.waypoint__data__wp2__lat p.UART__waypoint_out__data__wp2__lat)) (= p.waypoint__data__wp2__long p.UART__waypoint_out__data__wp2__long)) (= p.waypoint__data__wp2__alt p.UART__waypoint_out__data__wp2__alt)) (= p.waypoint__data__wp3__lat p.UART__waypoint_out__data__wp3__lat)) (= p.waypoint__data__wp3__long p.UART__waypoint_out__data__wp3__long)) (= p.waypoint__data__wp3__alt p.UART__waypoint_out__data__wp3__alt)) (= p.waypoint__data__wp4__lat p.UART__waypoint_out__data__wp4__lat)) (= p.waypoint__data__wp4__long p.UART__waypoint_out__data__wp4__long)) (= p.waypoint__data__wp4__alt p.UART__waypoint_out__data__wp4__alt)) (= p.waypoint__data__crc p.UART__waypoint_out__data__crc)))
(assert (and (>= p.recv_map__data__Pattern 0) (<= p.recv_map__data__Pattern 2)))
(assert (and (and (= p.position_status__data__lat p.UART__position_status_in__data__lat) (= p.position_status__data__long p.UART__position_status_in__data__long)) (= p.position_status__data__alt p.UART__position_status_in__data__alt)))
(assert (and (>= p.RADIO__recv_map_in__data__Pattern 0) (<= p.RADIO__recv_map_in__data__Pattern 2)))
(assert (and (and (= p.UART__position_status_out__data__lat p.FPLN__position_status__data__lat) (= p.UART__position_status_out__data__long p.FPLN__position_status__data__long)) (= p.UART__position_status_out__data__alt p.FPLN__position_status__data__alt)))
(assert (and (>= p.RADIO__recv_map_out__data__Pattern 0) (<= p.RADIO__recv_map_out__data__Pattern 2)))
(assert (and (and (= p.UART__position_status_out__data__lat p.RADIO__send_status_in__data__lat) (= p.UART__position_status_out__data__long p.RADIO__send_status_in__data__long)) (= p.UART__position_status_out__data__alt p.RADIO__send_status_in__data__alt)))

; kb
(assert (and (and (and (and p.assumption (=> p.RADIO__assumption p.RADIO__guarantee)) (=> p.FPLN__assumption p.FPLN__guarantee)) (=> p.WPM__assumption p.WPM__guarantee)) (=> p.UART__assumption p.UART__guarantee)))

; g
(assert p.guarantee)

(check-sat)
