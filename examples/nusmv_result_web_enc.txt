Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -- Loop starts here
  -> State: 1.1 <-
    inst.amonitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.adelaymonitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.AutomationRequestValidator.g1monitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.AutomationRequestValidator.g2monitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.AutomationRequestValidator.d1.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.AutomationRequestValidator.d2.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.PlanBuilder.g1monitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.PlanBuilder.g2monitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.PlanBuilder.d1.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.PlanBuilder.d2.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.TaskServiceBase.g1monitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.TaskServiceBase.g2monitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.TaskServiceBase.d1.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.TaskServiceBase.d2.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.RouteAggregator.g1monitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.RouteAggregator.g2monitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.RouteAggregator.d1.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.RouteAggregator.d2.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.Planner.gmonitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.Planner.d1.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.gmonitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.d.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    in1.event = TRUE
    inst.AutomationResponse_out.event = FALSE
    inst.AutomationRequestValidator.processing_path0.start.event = TRUE
    inst.processing_path.start.event = TRUE
    inst.AutomationRequestValidator.SubRequest_out.event = FALSE
    inst.processing_path.end.event = FALSE
    inst.AutomationRequestValidator.CmdResponse_out.event = FALSE
    inst.AutomationRequestValidator.processing_path0.end.event = FALSE
    inst.AutomationRequestValidator.d1.i = 1
    inst.d.i = 1
    inst.PlanBuilder.processing_path0.start.event = FALSE
    inst.PlanBuilder.SubRequest_out.event = FALSE
    inst.AutomationRequestValidator.processing_path1.end.event = FALSE
    inst.PlanBuilder.CmdResponse_out.event = FALSE
    inst.PlanBuilder.processing_path0.end.event = FALSE
    inst.PlanBuilder.d1.i = 1
    inst.TaskServiceBase.processing_path0.start.event = FALSE
    inst.TaskServiceBase.SubRequest_out.event = FALSE
    inst.AutomationRequestValidator.processing_path1.start.event = FALSE
    inst.AutomationRequestValidator.d2.i = 1
    inst.PlanBuilder.processing_path1.end.event = FALSE
    inst.TaskServiceBase.CmdResponse_out.event = FALSE
    inst.TaskServiceBase.processing_path0.end.event = FALSE
    inst.TaskServiceBase.d1.i = 1
    inst.RouteAggregator.processing_path0.start.event = FALSE
    inst.RouteAggregator.SubRequest_out.event = FALSE
    inst.PlanBuilder.processing_path1.start.event = FALSE
    inst.PlanBuilder.d2.i = 1
    inst.TaskServiceBase.processing_path1.end.event = FALSE
    inst.RouteAggregator.CmdResponse_out.event = FALSE
    inst.RouteAggregator.processing_path0.end.event = FALSE
    inst.RouteAggregator.d1.i = 1
    inst.Planner.processing_path.start.event = FALSE
    inst.Planner.CmdResponse_out.event = FALSE
    inst.TaskServiceBase.processing_path1.start.event = FALSE
    inst.TaskServiceBase.d2.i = 1
    inst.RouteAggregator.processing_path1.end.event = FALSE
    inst.Planner.processing_path.end.event = FALSE
    inst.Planner.d1.i = 1
    inst.RouteAggregator.processing_path1.start.event = FALSE
    inst.RouteAggregator.d2.i = 1
    in1.flowpoint.event = FALSE
    inst.AutomationResponse_out.flowpoint.event = TRUE
    inst.AutomationRequestValidator.CmdResponse_out.flowpoint.event = TRUE
    inst.a = TRUE
    inst.g = TRUE
    inst.AutomationRequestValidator.g = TRUE
    inst.AutomationRequestValidator.g1monitor.s_init = TRUE
    inst.AutomationRequestValidator.g1monitor.holds = TRUE
    inst.AutomationRequestValidator.g2monitor.s_init = TRUE
    inst.AutomationRequestValidator.g2monitor.holds = TRUE
    inst.AutomationRequestValidator.d1.state_i_init = TRUE
    inst.AutomationRequestValidator.d1.holds = TRUE
    inst.AutomationRequestValidator.d2.state_i_init = TRUE
    inst.AutomationRequestValidator.d2.holds = TRUE
    inst.d.state_i_init = TRUE
    inst.d.holds = TRUE
    inst.adelaymonitor.s_init = TRUE
    inst.adelaymonitor.holds = TRUE
    inst.TaskServiceBase.g = TRUE
    inst.TaskServiceBase.g1monitor.s_init = TRUE
    inst.TaskServiceBase.g1monitor.holds = TRUE
    inst.TaskServiceBase.g2monitor.s_init = TRUE
    inst.TaskServiceBase.g2monitor.holds = TRUE
    inst.TaskServiceBase.d1.state_i_init = TRUE
    inst.TaskServiceBase.d1.holds = TRUE
    inst.TaskServiceBase.d2.state_i_init = TRUE
    inst.TaskServiceBase.d2.holds = TRUE
    inst.gmonitor.s_init = TRUE
    inst.gmonitor.holds = TRUE
    inst.Planner.g = TRUE
    inst.Planner.gmonitor.s_init = TRUE
    inst.Planner.gmonitor.holds = TRUE
    inst.Planner.d1.state_i_init = TRUE
    inst.Planner.d1.holds = TRUE
    inst.amonitor.s_init = TRUE
    inst.amonitor.holds = TRUE
    inst.RouteAggregator.g = TRUE
    inst.RouteAggregator.g1monitor.s_init = TRUE
    inst.RouteAggregator.g1monitor.holds = TRUE
    inst.RouteAggregator.g2monitor.s_init = TRUE
    inst.RouteAggregator.g2monitor.holds = TRUE
    inst.RouteAggregator.d1.state_i_init = TRUE
    inst.RouteAggregator.d1.holds = TRUE
    inst.RouteAggregator.d2.state_i_init = TRUE
    inst.RouteAggregator.d2.holds = TRUE
    inst.PlanBuilder.g = TRUE
    inst.PlanBuilder.g1monitor.s_init = TRUE
    inst.PlanBuilder.g1monitor.holds = TRUE
    inst.PlanBuilder.g2monitor.s_init = TRUE
    inst.PlanBuilder.g2monitor.holds = TRUE
    inst.PlanBuilder.d1.state_i_init = TRUE
    inst.PlanBuilder.d1.holds = TRUE
    inst.PlanBuilder.d2.state_i_init = TRUE
    inst.PlanBuilder.d2.holds = TRUE
    inst.AutomationRequestValidator.g1monitor.state_trans = TRUE
    inst.AutomationRequestValidator.g2monitor.state_trans = TRUE
    inst.AutomationRequestValidator.d1.i_trans = TRUE
    inst.AutomationRequestValidator.d1.s_trans = TRUE
    inst.AutomationRequestValidator.d2.i_trans = TRUE
    inst.AutomationRequestValidator.d2.s_trans = TRUE
    inst.d.i_trans = TRUE
    inst.d.s_trans = TRUE
    inst.adelaymonitor.s_trans = TRUE
    inst.TaskServiceBase.g1monitor.state_trans = TRUE
    inst.TaskServiceBase.g2monitor.state_trans = TRUE
    inst.TaskServiceBase.d1.i_trans = TRUE
    inst.TaskServiceBase.d1.s_trans = TRUE
    inst.TaskServiceBase.d2.i_trans = TRUE
    inst.TaskServiceBase.d2.s_trans = TRUE
    inst.gmonitor.state_trans = TRUE
    inst.Planner.gmonitor.state_trans = TRUE
    inst.Planner.d1.i_trans = TRUE
    inst.Planner.d1.s_trans = TRUE
    inst.amonitor.s_trans = TRUE
    inst.RouteAggregator.g1monitor.state_trans = TRUE
    inst.RouteAggregator.g2monitor.state_trans = TRUE
    inst.RouteAggregator.d1.i_trans = TRUE
    inst.RouteAggregator.d1.s_trans = TRUE
    inst.RouteAggregator.d2.i_trans = TRUE
    inst.RouteAggregator.d2.s_trans = TRUE
    inst.PlanBuilder.g1monitor.state_trans = TRUE
    inst.PlanBuilder.g2monitor.state_trans = TRUE
    inst.PlanBuilder.d1.i_trans = TRUE
    inst.PlanBuilder.d1.s_trans = TRUE
    inst.PlanBuilder.d2.i_trans = TRUE
    inst.PlanBuilder.d2.s_trans = TRUE
  -> State: 1.2 <-
    inst.amonitor.s = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.AutomationRequestValidator.g1monitor.s = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.AutomationRequestValidator.d1.state = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.gmonitor.s = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.d.state = "UxASRespondsEvents_pkg.RespondsState.s1"
    in1.event = FALSE
    inst.AutomationRequestValidator.processing_path0.start.event = FALSE
    inst.processing_path.start.event = FALSE
    inst.AutomationRequestValidator.SubRequest_out.event = TRUE
    inst.AutomationRequestValidator.processing_path0.end.event = TRUE
    inst.PlanBuilder.processing_path0.start.event = TRUE
    in1.flowpoint.event = TRUE
    inst.AutomationRequestValidator.g1monitor.s_init = FALSE
    inst.AutomationRequestValidator.d1.state_i_init = FALSE
    inst.d.state_i_init = FALSE
    inst.gmonitor.s_init = FALSE
    inst.amonitor.s_init = FALSE
  -> State: 1.3 <-
    inst.adelaymonitor.s = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.AutomationRequestValidator.g1monitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.AutomationRequestValidator.d1.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.PlanBuilder.g1monitor.s = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.PlanBuilder.d1.state = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.AutomationRequestValidator.SubRequest_out.event = FALSE
    inst.AutomationRequestValidator.processing_path0.end.event = FALSE
    inst.AutomationRequestValidator.d1.i = 2
    inst.d.i = 2
    inst.PlanBuilder.processing_path0.start.event = FALSE
    inst.PlanBuilder.SubRequest_out.event = TRUE
    inst.PlanBuilder.processing_path0.end.event = TRUE
    inst.TaskServiceBase.processing_path0.start.event = TRUE
    in1.flowpoint.event = FALSE
    inst.AutomationRequestValidator.g1monitor.s_init = TRUE
    inst.adelaymonitor.s_init = FALSE
    inst.PlanBuilder.g1monitor.s_init = FALSE
    inst.PlanBuilder.d1.state_i_init = FALSE
  -> State: 1.4 <-
    inst.adelaymonitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.PlanBuilder.g1monitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.PlanBuilder.d1.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.TaskServiceBase.g1monitor.s = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.TaskServiceBase.d1.state = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.AutomationRequestValidator.d1.i = 1
    inst.d.i = 3
    inst.PlanBuilder.SubRequest_out.event = FALSE
    inst.PlanBuilder.processing_path0.end.event = FALSE
    inst.PlanBuilder.d1.i = 2
    inst.TaskServiceBase.processing_path0.start.event = FALSE
    inst.TaskServiceBase.SubRequest_out.event = TRUE
    inst.TaskServiceBase.processing_path0.end.event = TRUE
    inst.RouteAggregator.processing_path0.start.event = TRUE
    in1.flowpoint.event = TRUE
    inst.AutomationRequestValidator.d1.state_i_init = TRUE
    inst.adelaymonitor.s_init = TRUE
    inst.TaskServiceBase.g1monitor.s_init = FALSE
    inst.TaskServiceBase.d1.state_i_init = FALSE
    inst.PlanBuilder.g1monitor.s_init = TRUE
  -> State: 1.5 <-
    inst.adelaymonitor.s = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.TaskServiceBase.g1monitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.TaskServiceBase.d1.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.RouteAggregator.g1monitor.s = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.RouteAggregator.d1.state = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.d.i = 4
    inst.PlanBuilder.d1.i = 1
    inst.TaskServiceBase.SubRequest_out.event = FALSE
    inst.TaskServiceBase.processing_path0.end.event = FALSE
    inst.TaskServiceBase.d1.i = 2
    inst.RouteAggregator.processing_path0.start.event = FALSE
    inst.RouteAggregator.SubRequest_out.event = TRUE
    inst.RouteAggregator.processing_path0.end.event = TRUE
    inst.Planner.processing_path.start.event = TRUE
    in1.flowpoint.event = FALSE
    inst.adelaymonitor.s_init = FALSE
    inst.TaskServiceBase.g1monitor.s_init = TRUE
    inst.RouteAggregator.g1monitor.s_init = FALSE
    inst.RouteAggregator.d1.state_i_init = FALSE
    inst.PlanBuilder.d1.state_i_init = TRUE
  -> State: 1.6 <-
    inst.adelaymonitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.RouteAggregator.g1monitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.RouteAggregator.d1.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.Planner.gmonitor.s = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.Planner.d1.state = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.d.i = 5
    inst.TaskServiceBase.d1.i = 1
    inst.RouteAggregator.SubRequest_out.event = FALSE
    inst.RouteAggregator.processing_path0.end.event = FALSE
    inst.RouteAggregator.d1.i = 2
    inst.Planner.processing_path.start.event = FALSE
    inst.Planner.CmdResponse_out.event = TRUE
    inst.Planner.processing_path.end.event = TRUE
    inst.RouteAggregator.processing_path1.start.event = TRUE
    in1.flowpoint.event = TRUE
    inst.adelaymonitor.s_init = TRUE
    inst.TaskServiceBase.d1.state_i_init = TRUE
    inst.Planner.gmonitor.s_init = FALSE
    inst.Planner.d1.state_i_init = FALSE
    inst.RouteAggregator.g1monitor.s_init = TRUE
  -> State: 1.7 <-
    inst.adelaymonitor.s = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.RouteAggregator.g2monitor.s = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.RouteAggregator.d2.state = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.Planner.gmonitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.Planner.d1.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.d.i = 6
    inst.RouteAggregator.CmdResponse_out.event = TRUE
    inst.RouteAggregator.d1.i = 1
    inst.Planner.CmdResponse_out.event = FALSE
    inst.TaskServiceBase.processing_path1.start.event = TRUE
    inst.RouteAggregator.processing_path1.end.event = TRUE
    inst.Planner.processing_path.end.event = FALSE
    inst.Planner.d1.i = 2
    inst.RouteAggregator.processing_path1.start.event = FALSE
    in1.flowpoint.event = FALSE
    inst.adelaymonitor.s_init = FALSE
    inst.Planner.gmonitor.s_init = TRUE
    inst.RouteAggregator.g2monitor.s_init = FALSE
    inst.RouteAggregator.d1.state_i_init = TRUE
    inst.RouteAggregator.d2.state_i_init = FALSE
  -> State: 1.8 <-
    inst.adelaymonitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.TaskServiceBase.g2monitor.s = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.TaskServiceBase.d2.state = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.RouteAggregator.g2monitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.RouteAggregator.d2.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.d.i = 7
    inst.TaskServiceBase.CmdResponse_out.event = TRUE
    inst.PlanBuilder.processing_path1.start.event = TRUE
    inst.TaskServiceBase.processing_path1.end.event = TRUE
    inst.RouteAggregator.CmdResponse_out.event = FALSE
    inst.TaskServiceBase.processing_path1.start.event = FALSE
    inst.RouteAggregator.processing_path1.end.event = FALSE
    inst.Planner.d1.i = 1
    inst.RouteAggregator.d2.i = 2
    in1.flowpoint.event = TRUE
    inst.adelaymonitor.s_init = TRUE
    inst.TaskServiceBase.g2monitor.s_init = FALSE
    inst.TaskServiceBase.d2.state_i_init = FALSE
    inst.Planner.d1.state_i_init = TRUE
    inst.RouteAggregator.g2monitor.s_init = TRUE
  -> State: 1.9 <-
    inst.adelaymonitor.s = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.PlanBuilder.g2monitor.s = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.PlanBuilder.d2.state = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.TaskServiceBase.g2monitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.TaskServiceBase.d2.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.d.i = 8
    inst.PlanBuilder.CmdResponse_out.event = TRUE
    inst.AutomationRequestValidator.processing_path1.start.event = TRUE
    inst.PlanBuilder.processing_path1.end.event = TRUE
    inst.TaskServiceBase.CmdResponse_out.event = FALSE
    inst.PlanBuilder.processing_path1.start.event = FALSE
    inst.TaskServiceBase.processing_path1.end.event = FALSE
    inst.TaskServiceBase.d2.i = 2
    inst.RouteAggregator.d2.i = 1
    in1.flowpoint.event = FALSE
    inst.adelaymonitor.s_init = FALSE
    inst.TaskServiceBase.g2monitor.s_init = TRUE
    inst.RouteAggregator.d2.state_i_init = TRUE
    inst.PlanBuilder.g2monitor.s_init = FALSE
    inst.PlanBuilder.d2.state_i_init = FALSE
  -> State: 1.10 <-
    inst.adelaymonitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.AutomationRequestValidator.g2monitor.s = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.AutomationRequestValidator.d2.state = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.PlanBuilder.g2monitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.PlanBuilder.d2.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.AutomationResponse_out.event = TRUE
    inst.processing_path.end.event = TRUE
    inst.AutomationRequestValidator.CmdResponse_out.event = TRUE
    inst.d.i = 9
    inst.AutomationRequestValidator.processing_path1.end.event = TRUE
    inst.PlanBuilder.CmdResponse_out.event = FALSE
    inst.AutomationRequestValidator.processing_path1.start.event = FALSE
    inst.PlanBuilder.processing_path1.end.event = FALSE
    inst.PlanBuilder.d2.i = 2
    inst.TaskServiceBase.d2.i = 1
    in1.flowpoint.event = TRUE
    inst.AutomationRequestValidator.g2monitor.s_init = FALSE
    inst.AutomationRequestValidator.d2.state_i_init = FALSE
    inst.adelaymonitor.s_init = TRUE
    inst.TaskServiceBase.d2.state_i_init = TRUE
    inst.PlanBuilder.g2monitor.s_init = TRUE
  -> State: 1.11 <-
    inst.amonitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.adelaymonitor.s = "UxASRespondsEvents_pkg.RespondsState.s1"
    inst.AutomationRequestValidator.g2monitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.AutomationRequestValidator.d2.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.gmonitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.d.state = "UxASRespondsEvents_pkg.RespondsState.s0"
    inst.AutomationResponse_out.event = FALSE
    inst.processing_path.end.event = FALSE
    inst.AutomationRequestValidator.CmdResponse_out.event = FALSE
    inst.d.i = 10
    inst.AutomationRequestValidator.processing_path1.end.event = FALSE
    inst.AutomationRequestValidator.d2.i = 2
    inst.PlanBuilder.d2.i = 1
    in1.flowpoint.event = FALSE
    inst.AutomationRequestValidator.g2monitor.s_init = TRUE
    inst.adelaymonitor.s_init = FALSE
    inst.gmonitor.s_init = TRUE
    inst.amonitor.s_init = TRUE
    inst.PlanBuilder.d2.state_i_init = TRUE
  -> State: 1.12 <-
    inst.adelaymonitor.s = "UxASRespondsEvents_pkg.RespondsState.s0"
    in1.event = TRUE
    inst.AutomationRequestValidator.processing_path0.start.event = TRUE
    inst.processing_path.start.event = TRUE
    inst.d.i = 1
    inst.AutomationRequestValidator.d2.i = 1
    inst.AutomationRequestValidator.d2.state_i_init = TRUE
    inst.d.state_i_init = TRUE
    inst.adelaymonitor.s_init = TRUE
